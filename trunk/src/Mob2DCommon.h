#ifndef Mob2DCOMMON_H
#define Mob2DCOMMON_H

/**
This is the main resource header. This contains the following:
	* Includes for
		- OpenGL.
		- STL containers (including string).
		- SOIL includes.
		- TinyXML includes.
	* Utility functions.
	* Typedefs for numerous default data types as well as some STL objects.
	* Apropriate Licensing Information for open source libraries used in this engine.

	This is Mob2D. Mob2D Stands for DAta Rendering System, and is a 2D sprite engine. It utilizes XML to
create a complete video data loading middleware package. It is by far the most complex system in the DAFW, as it
must manage not only resources, but provide classes and functions to render scenes.

This can also be called Horde2D. Hehehe =p
*/

/* PRIORITIZED TODO AND FIXME LIST */
// TODO Partially Finished: Finish the resource management functionality in SpriteManager, including deleting
//      resources in an error safe manner.
//
// TODO Make sure that NULL smart pointers are dealt with in an error safe manner.
//
// TODO Abstract the XML parsing and delegate the responsibility to another class.
//
// TODO Abstract the Mob2D_node class.
//
// TODO Start work on particle system.
//
// TODO Add functions that return values for an animations bounding box, which should be the largest frame of the animation.
//
// TODO Replace the OpenGL matrix management with Kazmath.
//
// TODO Impliment shaders to draw the sprites instead of using glEnable/Disable(GL_TEXTURE_2D);
//
// TODO Very Low Priority: Create resource tools for subdividing spritesheets, creating particle systems, etc...
//      Have someone else do that.

#define Mob2D_USE_VERT_ARRAYS
// #define Mob2D_USE_VBO

//-----STANDARD-----//
#include <map>
#include <list>
#include <ctime>
#include <vector>
#include <string>
#include <fstream>
#include <iostream>

#include <boost/shared_ptr.hpp>
#include <boost/ptr_container/ptr_map.hpp>
#include <boost/ptr_container/ptr_vector.hpp>

// Drew a weird flashing box at the bottom of the screen, but otherwise rendered everything fine.
#include <boost/unordered_map.hpp> // Tested this out. Didn't work well.
#include <boost/ptr_container/ptr_map.hpp>

//-----OpenGL-----//
#include "GLee.h"
#include <GL/gl.h>
#include <GL/glu.h>

//-----SOIL-----//
// #include "soil/SOIL.h"

// #include "xml/tinyxml.h"

typedef std::string string;

#ifndef Mob2DLOG_H
#define Mob2DLOG_H
/**
Mob2DLog:
This class stores a list of std::strings that are then used by a separate console class. The two classes work together
to provide valuable debugging information.
*/
class Mob2DLog
{
	public:
		static Mob2DLog* Instance() { if(!m_pInstance) m_pInstance = new Mob2DLog; return m_pInstance; }

    /// Pushes a message string into the internal list of messages.
		void PushString(string _string);

    /// Dumps the message list into the console.
		void ConsoleDump();

    /// Dumps the message list into a file. The file name is "Mob2DLog_" and then the date it was generated.
		void FileDump();

	protected:
		Mob2DLog(){};
		Mob2DLog& operator=(Mob2DLog const&){};
		virtual ~Mob2DLog();
		static Mob2DLog* m_pInstance;

		std::list<string> error_list;
};
#endif // ENGINELOG_H
#endif // Mob2DCOMMON_H

/*/////////////////////////////////////////////////////////////////////////////
// BOOST LIBRARIES LICENSE INFORMATION ////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/
